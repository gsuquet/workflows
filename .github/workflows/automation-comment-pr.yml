name: Add or update a comment on the pull request

on:
  workflow_call:
    inputs:
      body:
        description: The body of the comment
        required: true
        type: string

permissions: {}

jobs:
  comment:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
    - name: Check if comment exists
      id: check_comment
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea
      with:
        script: |
          const { data: comments } = await github.issues.listComments({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          const existingComment = comments.find(comment => comment.body === workflow_call.inputs.body);
          console.log(existingComment);
          if (existingComment) {
            console.log('Comment already exists');
            core.setOutput('comment_id', existingComment.id);
          } else {
            console.log('Comment does not exist');
            core.setOutput('comment_id', '');
          }

    - name: Create or update comment
      id: create_or_update_comment
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea
      with:
        script: |
          const commentId = core.getInput('comment_id');
          const body = workflow_call.inputs.body;
          if (commentId) {
            console.log('Updating comment');
            await github.issues.updateComment({
              comment_id: commentId,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });
          } else {
            console.log('Creating comment');
            await github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });
          }
