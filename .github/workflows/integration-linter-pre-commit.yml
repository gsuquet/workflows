name: Pre-commit

on:
  workflow_call:
    inputs:
      python-version:
        description: Python version, default is 3.12.x
        required: false
        type: string
        default: 3.12.x
      cache:
        description: Package manager to cache from pip, pipenv and poetry
        required: false
        type: string
      harden_runner:
        description: "Harden the runner"
        required: false
        default: true
        type: boolean

permissions: {}

concurrency:
  group: pre-commit-${{ github.repository }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: Harden the runner
      uses: step-security/harden-runner@a4aa98b93cab29d9b1101a6143fb8bce00e2eac4
      if: ${{ inputs.harden_runner != false }}
      with:
        egress-policy: audit

    - name: Checkout repository
      uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633

    - name: Set up Python ${{ inputs.python-version }}
      uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d
      with:
        python-version: ${{ inputs.python-version }}
        cache: ${{ inputs.cache }}

    - name: Install pre-commit
      run: pip install pre-commit

    - name: Run pre-commit hooks on all files
      run: pre-commit run --all-files --show-diff-on-failure | tee output.txt

    - name: Display results in the GitHub Actions summary
      id: pre-commit
      run: |
        output=$(cat output.txt)

        if grep -q 'Failed' output; then
          echo "# Pre-commit" >> $GITHUB_STEP_SUMMARY
          echo ":x: Pre-commit checks failed" >> $GITHUB_STEP_SUMMARY
          echo "You can reproduce this behavior locally by running :" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "pre-commit run --all-files --show-diff-on-failure" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "Please fix the errors and commit again." >> $GITHUB_STEP_SUMMARY
          echo "If you think this is a false positive, please open an issue on the [GitHub repository](https://github.com/gsuquet/workflows/issues/new?assignees=&labels=bug%2Cto+sort&projects=&template=bug_report.yml)." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
        else
          echo "# Pre-commit" >> $GITHUB_STEP_SUMMARY
          echo ":white_check_mark: Pre-commit checks passed" >> $GITHUB_STEP_SUMMARY
        fi

        # Exclude lines that don't end with Passed, Skipped or Failed
        output=$(echo "$output" | grep -E 'Passed|Skipped|Failed')

        output=$(echo "$output" | sed 's/Passed/:white_check_mark:/g')
        output=$(echo "$output" | sed 's/Skipped/:ballot_box_with_check:/g')
        output=$(echo "$output" | sed 's/Failed/:x:/g')

        # Use awk to format the output into a markdown table, removing the dots
        output=$(echo "$output" | awk -F':' '{gsub(/\.+/, "", $1); print "| " $1 " | :" $2 ":|"}')

        echo "## Checks summary" >> $GITHUB_STEP_SUMMARY
        echo "| Check | Result |" >> $GITHUB_STEP_SUMMARY
        echo "| --- | --- |" >> $GITHUB_STEP_SUMMARY
        echo "$output" >> $GITHUB_STEP_SUMMARY
      shell: bash
