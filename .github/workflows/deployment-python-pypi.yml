name: Deploy a python package to PyPi and GitHub
on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: 'The environment to deploy to'
        default: 'pypi'
      environment_url:
        required: true
        type: string
        description: 'The environment URL to deploy to'
      project_install_command:
        required: false
        type: string
        description: 'The command to install the project'
        default: 'just install'
      project_build_command:
        required: false
        type: string
        description: 'The command to build the project'
        default: 'just build'
      use_just:
        default: true
        description: 'Use just to run commands'
        required: false
        type: boolean
      harden_runner:
        default: true
        description: 'Harden the runner'
        required: false
        type: boolean

permissions: {}

concurrency:
  group: deployment-pypi-${{ github.repository }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  release:
    runs-on: ubuntu-latest
    permissions: write-all
    environment:
      name: ${{ inputs.environment }}
      url: ${{ inputs.environment_url }}
    steps:
      - name: Harden the runner
        uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6
        if: ${{ inputs.harden_runner == true }}
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332

      - name: Semantic release
        id: semantic-release
        uses: python-semantic-release/python-semantic-release@0f4c0b152e115c266c7a838c8e3997483a44de64
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install just
        if: ${{ inputs.use_just }}
        run: sudo snap install --edge --classic just

      - name: Install dependencies
        if: steps.semantic-release.outputs.released == 'true'
        run: ${{ inputs.project_install_command }}

      - name: Build project
        if: steps.semantic-release.outputs.released == 'true'
        run: ${{ inputs.project_build_command }}

      - name: Publish to PyPi
        if: steps.semantic-release.outputs.released == 'true'
        uses: pypa/gh-action-pypi-publish@ec4db0b4ddc65acdf4bff5fa45ac92d78b56bdf0

      - name: Publish to GitHub
        if: steps.semantic-release.outputs.released == 'true'
        uses: python-semantic-release/upload-to-gh-release@cd7c5a2a25d118881aa9058d225e29427e640127
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
